# Light-eventuate-4j based project

## Architecture

Light-eventuate-4j based project is designed based on the microservice CQRS design pattern. Light-codegen generated project by default will have following module.


-- common           shared components between command side and query side services, which normally includes events, domain object, util classes...

-- command          command side components, normally, it includes Commands definition, Aggregation definition...

-- query            query side components, normally we can query side service classes on this module; for example, DAO, CQRS query parser....

-- command-service   command side rest service, which will use light-eventuate-4j framework for publish command/event to event store for domain object status change.

-- query-service    query side rest service, which will light-eventuate-4j framework to subscribe event from event store and update local query segregates. Then provide query process for API service.


Light-codegen eventuate module generation just generate base eventuate. project structure. It will includes basic dependency and service.yml config. But user can change the generated the structure to follow their project standard.



## Build

Go to the project root folder, run command:


```
mvn clean install
```


